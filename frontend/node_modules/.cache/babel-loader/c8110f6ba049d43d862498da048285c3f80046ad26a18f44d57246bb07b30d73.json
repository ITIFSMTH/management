{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-05ae73d1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"page-block\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"page-block__header\"\n}, \"Статистика операторов\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"table__wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"table__table\"\n};\nconst _hoisted_5 = {\n  class: \"table__thead\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Оператор\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"table__td table__login\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_createElementVNode(\"tr\", _hoisted_5, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.days, day => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      class: \"table__th\",\n      key: day.getDate()\n    }, _toDisplayString($options.getDate(day)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.days, day => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      class: \"table__th\",\n      key: day.getDate()\n    }, _toDisplayString($options.getDate(day)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$store.getters.operatorsStatistic(), statistic => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      class: \"table__tr\",\n      key: statistic.operator.operator.id\n    }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(statistic.operator.operator.worker.login), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.days, day => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        class: \"table__td table__hours\",\n        key: day.getDate()\n      }, _toDisplayString($options.getHoursForDay(statistic, day)), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAY;gEACrBC,oBAAyD;EAArDD,KAAK,EAAC;AAAoB,GAAC,uBAAqB;;EAE/CA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAc;gEACtBC,oBAAmC;EAA/BD,KAAK,EAAC;AAAW,GAAC,UAAQ;;EAexBA,KAAK,EAAC;AAAwB;;uBArB1CE,oBA8BM,OA9BNC,UA8BM,GA7BJC,UAAyD,EAEzDH,oBA0BM,OA1BNI,UA0BM,GAzBNJ,oBAwBQ,SAxBRK,UAwBQ,GAvBNL,oBAYK,MAZLM,UAYK,GAXHC,UAAmC,qBACnCN,oBAIKO,6BAHWC,UAAI,EAAXC,GAAG;yBADZT,oBAIK;MAJDF,KAAK,EAAC,WAAW;MAEZY,GAAG,EAAED,GAAG,CAACE,OAAO;wBACrBC,gBAAO,CAACH,GAAG;qDAEfT,oBAIKO,6BAHWC,UAAI,EAAXC,GAAG;yBADZT,oBAIK;MAJDF,KAAK,EAAC,WAAW;MAEZY,GAAG,EAAED,GAAG,CAACE,OAAO;wBACrBC,gBAAO,CAACH,GAAG;oCAGjBV,oBASQ,mCARNC,oBAOKO,kCAP0CM,MAAM,CAACC,OAAO,CAACC,kBAAkB,IAAnDC,SAAS;yBAAtChB,oBAOK;MAPDF,KAAK,EAAC,WAAW;MACZY,GAAG,EAAEM,SAAS,CAACC,QAAQ,CAACA,QAAQ,CAACC;QACxCnB,oBAAoF,MAApFoB,UAAoF,mBAA/CH,SAAS,CAACC,QAAQ,CAACA,QAAQ,CAACG,MAAM,CAACC,KAAK,qCAC7ErB,oBAGKO,6BAH4CC,UAAI,EAAXC,GAAG;2BAA7CT,oBAGK;QAHDF,KAAK,EAAC,wBAAwB;QACzBY,GAAG,EAAED,GAAG,CAACE,OAAO;0BACrBC,uBAAc,CAACI,SAAS,EAAEP,GAAG","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","$data","day","key","getDate","$options","$store","getters","operatorsStatistic","statistic","operator","id","_hoisted_7","worker","login"],"sourceRoot":"","sources":["/home/f48d1/Documents/work/orbita/management/frontend/src/components/Admin/Statistic/Statistic.vue"],"sourcesContent":["<template>\n  <div class=\"page-block\">\n    <h2 class=\"page-block__header\">Статистика операторов</h2>\n\n    <div class=\"table__wrapper\">\n    <table class=\"table__table\">\n      <tr class=\"table__thead\">\n        <th class=\"table__th\">Оператор</th>\n        <th class=\"table__th\" \n          v-for=\"day in days\"\n          v-bind:key=\"day.getDate()\">\n          {{getDate(day)}}\n        </th>\n        <th class=\"table__th\" \n          v-for=\"day in days\"\n          v-bind:key=\"day.getDate()\">\n          {{getDate(day)}}\n        </th>\n      </tr>\n      <tbody>\n        <tr class=\"table__tr\" v-for=\"statistic in this.$store.getters.operatorsStatistic()\"\n          v-bind:key=\"statistic.operator.operator.id\">\n          <td class=\"table__td table__login\">{{statistic.operator.operator.worker.login}}</td>\n          <td class=\"table__td table__hours\" v-for=\"day in days\"\n            v-bind:key=\"day.getDate()\">\n            {{getHoursForDay(statistic, day)}}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import moment from 'moment';\n\n  export default {\n    name: \"statistic-component\",\n    data() {\n      return {\n        days: [],\n      }\n    },\n    methods: {\n      getDays() {\n        const currentDate = new Date()\n\n        this.days = Array.from({length: new Date(currentDate.getFullYear(), currentDate.getMonth()+1, 0).getDate()}, (_, i) => {\n          return new Date(currentDate.getFullYear(), currentDate.getMonth(), i+1)\n        })\n      },\n      getDate(date) {\n        return moment(date).format(\"DD.MM\")\n      },\n      getHoursForDay(statistic, date) {\n        let hours = 0\n\n        statistic.operator_shifts.forEach(shift => {\n          if (moment(shift.start_date).format(\"DD.MM.YYYY\") != moment(date).format(\"DD.MM.YYYY\")) return\n          hours += Math.ceil(Math.abs(new Date(shift.end_date) - new Date(shift.start_date)) / 36e5);\n        })\n\n        return hours\n      }\n    },\n    mounted() {\n        this.getDays()\n        this.$store.dispatch(\"getOperatorsStatistic\")\n    },\n}\n</script>\n\n\n<style scoped>\n  .table__wrapper {\n    display: block;\n    overflow-x: auto;\n    white-space: nowrap;\n    max-width: 100%;\n  }\n\n  .table__table {\n    display: block;\n    border: 1px solid black;\n     max-width: 0;\n  }\n\n  .table__login {\n    text-align: left;\n  }\n\n  .table__hours {\n    text-align: center;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}