{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-05ae73d1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"page-block\"\n};\nconst _hoisted_2 = {\n  class: \"page-block__header\"\n};\nconst _hoisted_3 = {\n  class: \"table__wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"table__table\",\n  cellspacing: \"0\"\n};\nconst _hoisted_5 = {\n  class: \"table__tr\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\",\n  rowspan: \"2\"\n}, \"Оператор\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\",\n  rowspan: \"2\"\n}, \"Сумма Ч.\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\",\n  rowspan: \"2\"\n}, \"Сумма З.\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\",\n  colspan: \"4\"\n}, \"Средние данные за месяц\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"table__tr\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Начало\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Конец\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Перерыв\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Работа\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Начало\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Конец\", -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Раб. Ч.\", -1 /* HOISTED */));\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Пер.\", -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"table__th\"\n}, \"Ч.З.\", -1 /* HOISTED */));\nconst _hoisted_20 = {\n  class: \"table__td\"\n};\nconst _hoisted_21 = {\n  class: \"table__td\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"table__td\"\n}, \"0\", -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"table__td\"\n};\nconst _hoisted_24 = {\n  class: \"table__td\"\n};\nconst _hoisted_25 = {\n  class: \"table__td\"\n};\nconst _hoisted_26 = {\n  class: \"table__td\"\n};\nconst _hoisted_27 = {\n  class: \"table__td\"\n};\nconst _hoisted_28 = {\n  class: \"table__td\"\n};\nconst _hoisted_29 = {\n  class: \"table__td\"\n};\nconst _hoisted_30 = {\n  class: \"table__td\"\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", {\n  class: \"table__td\"\n}, \"0\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString($options.formatMonth($props.statistic.date)), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_createCommentVNode(\" TABLE HEAD \"), _createElementVNode(\"tr\", _hoisted_5, [_hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDays(), day => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      class: \"table__th\",\n      colspan: \"5\",\n      key: day\n    }, _toDisplayString($options.formatDay(day)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"tr\", _hoisted_10, [_hoisted_11, _hoisted_12, _hoisted_13, _hoisted_14, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDays(), day => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: day\n    }, [_hoisted_15, _hoisted_16, _hoisted_17, _hoisted_18, _hoisted_19], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" TABLE DATA \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.statistic.statistic, operatorStatistic => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      class: \"table__tr\",\n      key: operatorStatistic.operator.operator.id\n    }, [_createElementVNode(\"td\", _hoisted_20, _toDisplayString(operatorStatistic.operator.operator.worker.login), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_21, _toDisplayString($options.formatDuration($options.getOperatorShiftsTime(operatorStatistic.operator_shifts))), 1 /* TEXT */), _hoisted_22, _createElementVNode(\"td\", _hoisted_23, _toDisplayString($options.formatTime($options.getMiddleOperatorShiftsStart(operatorStatistic.operator_shifts))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_24, _toDisplayString($options.formatTime($options.getMiddleOperatorShiftsEnd(operatorStatistic.operator_shifts))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_25, _toDisplayString($options.formatDuration($options.getMiddleOperatorShiftsTimeoutsTime(operatorStatistic.operator_shifts))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_26, _toDisplayString($options.formatDuration($options.getMiddleOperatorShiftsTime(operatorStatistic.operator_shifts))), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getDays(), day => {\n      return _openBlock(), _createElementBlock(_Fragment, {\n        key: day\n      }, [_createElementVNode(\"td\", _hoisted_27, _toDisplayString($options.formatTime($options.getOperatorShiftStartAtDay(operatorStatistic.operator_shifts, day))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_28, _toDisplayString($options.formatTime($options.getOperatorShiftEndAtDay(operatorStatistic.operator_shifts, day))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_29, _toDisplayString($options.formatDuration($options.getOperatorShiftTimeoutsTimeAtDay(operatorStatistic.operator_shifts, day))), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_30, _toDisplayString($options.getOperatorShiftTimeoutsCountAtDay(operatorStatistic.operator_shifts, day)), 1 /* TEXT */), _hoisted_31], 64 /* STABLE_FRAGMENT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":"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","names":["class","cellspacing","_createElementVNode","rowspan","colspan","_createElementBlock","_hoisted_1","_hoisted_2","$options","$props","date","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","day","key","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","statistic","operatorStatistic","operator","id","_hoisted_20","worker","login","_hoisted_21","operator_shifts","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31"],"sourceRoot":"","sources":["/home/f48d1/Documents/work/orbita/management/frontend/src/components/Admin/Statistic/Statistic.vue"],"sourcesContent":["<template>\n  <div class=\"page-block\">\n    <h2 class=\"page-block__header\">{{formatMonth(statistic.date)}}</h2>\n\n    <div class=\"table__wrapper\">\n    <table class=\"table__table\" cellspacing=\"0\">\n      <!-- TABLE HEAD -->\n      <tr class=\"table__tr\">\n        <th class=\"table__th\" rowspan=\"2\">Оператор</th>\n        <th class=\"table__th\" rowspan=\"2\">Сумма Ч.</th>\n        <th class=\"table__th\" rowspan=\"2\">Сумма З.</th>\n        <th class=\"table__th\" colspan=\"4\">Средние данные за месяц</th>\n        <th class=\"table__th\" colspan=\"5\" \n          v-for=\"day in getDays()\"\n          v-bind:key=\"day\">\n          {{formatDay(day)}}\n        </th>\n      </tr>\n        \n      <tr class=\"table__tr\">\n        <th class=\"table__th\">Начало</th>\n        <th class=\"table__th\">Конец</th>\n        <th class=\"table__th\">Перерыв</th>\n        <th class=\"table__th\">Работа</th>\n        <template \n          v-for=\"day in getDays()\"\n          v-bind:key=\"day\">\n          <th class=\"table__th\">Начало</th>\n          <th class=\"table__th\">Конец</th>\n          <th class=\"table__th\">Раб. Ч.</th>\n          <th class=\"table__th\">Пер.</th>\n          <th class=\"table__th\">Ч.З.</th>\n        </template>\n      </tr>\n\n      <!-- TABLE DATA -->\n      <tr class=\"table__tr\"\n        v-for=\"operatorStatistic in statistic.statistic\"\n        v-bind:key=\"operatorStatistic.operator.operator.id\">\n        <td class=\"table__td\">{{operatorStatistic.operator.operator.worker.login}}</td>\n        <td class=\"table__td\">{{\n          formatDuration(getOperatorShiftsTime(operatorStatistic.operator_shifts))\n        }}</td>\n        <td class=\"table__td\">0</td>\n        <td class=\"table__td\">{{formatTime(getMiddleOperatorShiftsStart(operatorStatistic.operator_shifts))}}</td>\n        <td class=\"table__td\">{{formatTime(getMiddleOperatorShiftsEnd(operatorStatistic.operator_shifts))}}</td>\n        <td class=\"table__td\">{{formatDuration(getMiddleOperatorShiftsTimeoutsTime(operatorStatistic.operator_shifts))}}</td>\n        <td class=\"table__td\">{{formatDuration(getMiddleOperatorShiftsTime(operatorStatistic.operator_shifts))}}</td>\n        <template \n          v-for=\"day in getDays()\"\n          v-bind:key=\"day\">\n          <td class=\"table__td\">{{formatTime(getOperatorShiftStartAtDay(operatorStatistic.operator_shifts, day))}}</td>\n          <td class=\"table__td\">{{formatTime(getOperatorShiftEndAtDay(operatorStatistic.operator_shifts, day))}}</td>\n          <td class=\"table__td\">{{formatDuration(getOperatorShiftTimeoutsTimeAtDay(operatorStatistic.operator_shifts, day))}}</td>\n          <td class=\"table__td\">{{getOperatorShiftTimeoutsCountAtDay(operatorStatistic.operator_shifts, day)}}</td>\n          <td class=\"table__td\">0</td>\n        </template>\n      </tr>\n    </table>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  import moment from 'moment';\n\n  export default {\n    name: \"statistic-component\",\n    props: ['statistic'],\n    methods: {\n      formatMonth(date) {\n        const dateString = moment(date).format(\"MMMM YYYY\")\n        return dateString.charAt(0).toUpperCase() + dateString.slice(1)\n      },\n      formatDay(date) {\n        const dateString = moment(date).format(\"dddd DD.MM.YYYY\")\n        return dateString.charAt(0).toUpperCase() + dateString.slice(1)\n      },\n      formatTime(date) {\n        if (date === 0) return \"-\"\n        return moment(date).format(\"HH:mm\")\n      },\n      formatDuration(seconds) {\n        if (seconds === 0) return \"-\"\n        const hours = Math.floor(seconds / 60 / 60)\n        const minutes = Math.floor(seconds / 60 % 60)\n        const secondsRem = Math.floor(seconds % 60)\n        if (hours > 0) return `${hours}ч. ${minutes}м.`\n        return `${minutes}м. ${secondsRem}с.`\n      },\n      getDays() {\n        const statisticDate = new Date(this.statistic.date)\n        const monthDate = new Date(statisticDate.getFullYear(), statisticDate.getMonth() + 1, 0);\n        return Array.from({length: monthDate.getDate()}, (_, k) => new Date(\n          monthDate.getFullYear(),\n          monthDate.getMonth(),\n          k+1,\n        ))\n      },\n      getOperatorShiftsTime(shifts) {\n        if (shifts.length === 0) return 0 \n        return shifts.reduce((a, v) => a + (new Date(v.end_date) - new Date(v.start_date)), 0) / 1000\n      },\n      getOperatorShiftStartAtDay(shifts, day) {\n        for (const shift of shifts) {\n          if (new Date(shift.start_date).getDate() == day.getDate()) {\n            return shift.start_date\n          }\n        }\n        return 0\n      },\n      getOperatorShiftEndAtDay(shifts, day) {\n        for (const shift of shifts) {\n          if (new Date(shift.start_date).getDate() == day.getDate()) {\n            return shift.end_date\n          }\n        }\n        return 0\n      },\n      getOperatorShiftTimeAtDay(shifts, day) {\n        const shift = shifts.find((shift) => new Date(shift.start_date).getDate() === day.getDate())\n        if (!shift) return 0\n        const timeout = this.getOperatorShiftTimeoutsTimeAtDay(shifts, day)\n        return ((new Date(shift.end_date) - new Date(shift.start_date)) / 1000) - timeout\n      },\n      getOperatorShiftTimeoutsTimeAtDay(shifts, day) {\n        if (shifts.length === 0) return 0 \n        const shift = shifts.find((shift) => new Date(shift.start_date).getDate() === day.getDate())\n        if (!shift || shift.timeouts.length === 0) return 0\n        return shift.timeouts.reduce((a, v) => a + (new Date(v.end_date) - new Date(v.start_date)), 0) / 1000\n      },\n      getOperatorShiftTimeoutsCountAtDay(shifts, day) {\n        if (shifts.length === 0) return 0 \n        const shift = shifts.find((shift) => new Date(shift.start_date).getDate() === day.getDate())\n        if (!shift) return 0\n        return shift.timeouts.length\n      },\n      getMiddleOperatorShiftsStart(shifts) {\n        if (shifts.length === 0) return 0\n        const minutes = Math.round(shifts.reduce((a, v) => a + new Date(v.start_date).getHours() * 60 + new Date(v.start_date).getMinutes(), 0) / shifts.length)\n        return new Date(0, 0, 0, Math.floor(minutes / 60), minutes % 60, 0, 0)\n      },\n      getMiddleOperatorShiftsEnd(shifts) {\n        if (shifts.length === 0) return 0\n        const minutes = Math.round(shifts.reduce((a, v) => a + new Date(v.end_date).getHours() * 60 + new Date(v.end_date).getMinutes(), 0) / shifts.length)\n        return new Date(0, 0, 0, Math.floor(minutes / 60), minutes % 60, 0, 0)\n      },\n      getMiddleOperatorShiftsTimeoutsTime(shifts) {\n        if (shifts.length === 0) return 0\n        return Math.round(\n          shifts.reduce(\n            (a, shift) => a + shift.timeouts.reduce(\n              (tA, timeout) => tA + (new Date(timeout.end_date) - new Date(timeout.start_date)), 0\n            ), 0\n          ) / shifts.length / 1000\n        )\n      },\n      getMiddleOperatorShiftsTime(shifts) {\n        if (shifts.length === 0) return 0\n        return Math.round(\n          shifts.reduce(\n            (a, shift) => {\n              const timeouts = shift.timeouts.reduce(\n                (tA, timeout) => tA + (new Date(timeout.end_date) - new Date(timeout.start_date)), 0\n              )\n\n              return a + (new Date(shift.end_date) - new Date(shift.start_date)) - timeouts\n            }, 0\n          ) / shifts.length / 1000\n        )\n      },\n    },\n  }\n</script>\n\n\n<style scoped>\n  .table__wrapper {\n    display: block;\n    overflow-x: auto;\n    max-width: 100%;\n  }\n\n  .table__table {\n    display: block;\n    max-width: 0;\n    white-space: nowrap;\n    padding-bottom: 20px;\n  }\n\n  .table__th,\n  .table__td {\n    text-align: center;\n    padding: 4px 8px;\n    vertical-align: top;\n    border-top: 2px solid var(--lt__main);\n    border-left: 2px solid var(--lt__main); \n  }\n\n  .table__th:last-child,\n  .table__td:last-child {\n    border-right: 2px solid var(--lt__main); \n  }\n\n  .table__tr:last-child > * {\n    border-bottom: 2px solid var(--lt__main); \n  } \n\n  .table__login {\n    text-align: left;\n  }\n\n  .table__hours {\n    text-align: center;\n  }\n\n\n  /* DARK THEME */\n\n  .dark__theme .table__th,\n  .dark__theme .table__td {\n    border-color: var(--dt__header);\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}