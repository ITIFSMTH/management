{"ast":null,"code":"import VueCookies from 'vue-cookies';\nimport jwtDecode from \"jwt-decode\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport { Roles } from '@/shared';\nimport Store from '@/store';\nconst routes = [{\n  path: '/login',\n  name: 'login-route',\n  meta: {\n    layout: 'login-layout'\n  },\n  component: () => import('@/views/Login.vue')\n}, {\n  path: '/admin',\n  name: 'admin-route',\n  meta: {\n    layout: 'panel-layout',\n    forRoles: [Roles.AdministratorRole]\n  },\n  component: () => import('@/views/Admin.vue')\n}, {\n  path: '/operator',\n  name: 'operator-route',\n  meta: {\n    layout: 'panel-layout',\n    forRoles: [Roles.JuniorOperatorRole, Roles.SeniorOperatorRole]\n  },\n  component: () => import('@/views/Operator.vue')\n}, {\n  path: '/operator/poll/rating',\n  name: 'rating-poll-route',\n  meta: {\n    layout: 'panel-layout',\n    forRoles: [Roles.JuniorOperatorRole]\n  },\n  component: () => import('@/views/Admin.vue')\n}, {\n  path: '/operator/poll/budget',\n  name: 'budget-poll-route',\n  meta: {\n    layout: 'panel-layout',\n    forRoles: [Roles.SeniorOperatorRole]\n  },\n  component: () => import('@/views/Admin.vue')\n}, {\n  path: '/:pathMatch(.*)*',\n  redirect: '/admin'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // Get JWT cookie\n  const jwtCookie = VueCookies.get('jwt');\n  const jwtDecoded = jwtCookie ? jwtDecode(jwtCookie) : {};\n\n  // If route don't need to be autrhorized\n  if (to.meta.forRoles.length === 0) return next();\n\n  // Check jwt cookie valid\n  if (!jwtCookie || Date.now() >= jwtDecoded.exp * 1000) {\n    return next({\n      name: 'login-route'\n    });\n  }\n\n  // Check is user role exist in route\n  if (!to.meta.forRoles.find(role => role.ID === jwtDecoded.role_id)) {\n    if (Store.getters.isUserAdministrator) {\n      return next({\n        name: 'admin-route'\n      });\n    } else if (Store.getters.isUserOperator) {\n      return next({\n        name: 'operator-route'\n      });\n    }\n  }\n\n  // if no problems route user\n  next();\n});\nexport default router;","map":{"version":3,"names":["VueCookies","jwtDecode","createRouter","createWebHistory","Roles","Store","routes","path","name","meta","layout","component","forRoles","AdministratorRole","JuniorOperatorRole","SeniorOperatorRole","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","jwtCookie","get","jwtDecoded","length","Date","now","exp","find","role","ID","role_id","getters","isUserAdministrator","isUserOperator"],"sources":["/home/f48d1/Documents/work/orbita/management/frontend/src/router/index.js"],"sourcesContent":["import VueCookies from 'vue-cookies';\nimport jwtDecode from \"jwt-decode\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport { Roles } from '@/shared';\nimport Store from '@/store';\n\n\nconst routes = [\n  {\n    path: '/login',\n    name: 'login-route',\n    meta: {layout: 'login-layout'},\n    component: () => import('@/views/Login.vue')\n  },\n  {\n    path: '/admin',\n    name: 'admin-route',\n    meta: {layout: 'panel-layout', forRoles: [Roles.AdministratorRole]},\n    component: () => import('@/views/Admin.vue')\n  },\n  {\n    path: '/operator',\n    name: 'operator-route',\n    meta: {layout: 'panel-layout', forRoles: [Roles.JuniorOperatorRole, Roles.SeniorOperatorRole]},\n    component: () => import('@/views/Operator.vue')\n  },\n  {\n    path: '/operator/poll/rating',\n    name: 'rating-poll-route',\n    meta: {layout: 'panel-layout', forRoles: [Roles.JuniorOperatorRole]},\n    component: () => import('@/views/Admin.vue')\n  },\n  {\n    path: '/operator/poll/budget',\n    name: 'budget-poll-route',\n    meta: {layout: 'panel-layout', forRoles: [Roles.SeniorOperatorRole]},\n    component: () => import('@/views/Admin.vue')\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    redirect: '/admin'\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // Get JWT cookie\n  const jwtCookie = VueCookies.get('jwt')\n  const jwtDecoded = jwtCookie ? jwtDecode(jwtCookie) : {}\n\n  // If route don't need to be autrhorized\n  if (to.meta.forRoles.length === 0) return next()\n\n  // Check jwt cookie valid\n  if (!jwtCookie || Date.now() >= jwtDecoded.exp * 1000){\n    return next({name: 'login-route'})\n  }\n\n  // Check is user role exist in route\n  if (!to.meta.forRoles.find((role) => role.ID === jwtDecoded.role_id)) {\n    if (Store.getters.isUserAdministrator) {\n      return next({name: 'admin-route'})\n    } else if (Store.getters.isUserOperator) {\n      return next({name: 'operator-route'})\n    }\n  }\n\n  // if no problems route user\n  next()\n})\n\nexport default router"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}